package indexof

import (
	"github.com/cheekybits/genny/generic"
)

type ValueType generic.Type
type FnName generic.Type

func TestFnName(t *testing.T) {
	rnd := rand.New(rand.NewSource(time.Now().UnixNano()))
	expect := map[ValueType]int{}

	var ValueTypes []ValueType
	
	c := 0
	for i := 0; i < 256; i++ {
		v := ValueType(rnd.Int()) // l o l

		// skip if we've already done this one
		if _, ok := expect[v]; ok {
			continue
		}

		ValueTypes = append(ValueTypes, v)
		expect[v] = c
		c++
	}

	for i := range expect {
		got := FnName(i, ValueTypes)
		want := expect[i]

		if got != want {
			t.Errorf("ValueType(%d) - expected at position %d, got position %d", i, want, got)
		}
	}
}
